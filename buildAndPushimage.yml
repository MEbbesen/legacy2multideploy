trigger:
- main
- feature/*
- bugfix/*

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8f10355a-8aa9-4a40-964c-ff3b32729046'
  imageRepository: 'legacywebserver'
  containerRegistry: 'legacy2multideployregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/legacy/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          switch(${env:BUILD_SOURCEBRANCH}) {
            'refs/heads/master' {Write-Host "##vso[task.setvariable variable=tag]latest"; }
            'refs/heads/feature/*' {Write-Host "##vso[task.setvariable variable=tag]$(Build.BuildId)-feat"; }
            'refs/heads/bugfix/*' {Write-Host "##vso[task.setvariable variable=tag]$(Build.BuildId)-bug"; }
          }
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
